generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Address {
  id         String    @id(map: "PK__Address__3213E83F4E99BE28") @db.UniqueIdentifier
  userId     String?   @db.UniqueIdentifier
  address    String?   @db.NVarChar(200)
  addNote    String?   @db.NVarChar(500)
  created_at DateTime? @db.DateTime
  updated_at DateTime? @db.DateTime
  Users      Users?    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Address__userId__398D8EEE")
}

model Cart {
  id          String        @id(map: "PK__Cart__3213E83FF410D630") @db.UniqueIdentifier
  userId      String?       @db.UniqueIdentifier
  productId   String?       @db.UniqueIdentifier
  quantity    Int?
  Products    Products?     @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Cart__productId__4E88ABD4")
  Users       Users?        @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Cart__userId__4D94879B")
  Transaction Transaction[]
}

model Categories {
  id                String              @id(map: "PK__Categori__3213E83F04D7DBFB") @db.UniqueIdentifier
  categoryName      String?             @db.NVarChar(100)
  created_at        DateTime?           @db.DateTime
  updated_at        DateTime?           @db.DateTime
  ProductCategories ProductCategories[]
}

model PaymentMethod {
  id          String        @id(map: "PK__PaymentM__3213E83F2481F3D5") @db.UniqueIdentifier
  paymentName String?       @db.NVarChar(50)
  description String?       @db.NVarChar(200)
  img         String?
  Transaction Transaction[]
}

model ProductCategories {
  id         String      @id(map: "PK__ProductC__3213E83F7818D905") @db.UniqueIdentifier
  productId  String?     @db.UniqueIdentifier
  categoryId String?     @db.UniqueIdentifier
  created_at DateTime?   @db.DateTime
  updated_at DateTime?   @db.DateTime
  Categories Categories? @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__ProductCa__categ__4AB81AF0")
  Products   Products?   @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__ProductCa__produ__49C3F6B7")
}

model ProductImgs {
  id         String    @id(map: "PK__ProductI__3213E83F2094CC3F") @db.UniqueIdentifier
  productId  String?   @db.UniqueIdentifier
  url        String?
  created_at DateTime? @db.DateTime
  updated_at DateTime? @db.DateTime
  Products   Products? @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__ProductIm__produ__440B1D61")
}

model ProductReview {
  id            String       @id(map: "PK__ProductR__3213E83F096E28A6") @db.UniqueIdentifier
  transactionId String?      @db.UniqueIdentifier
  review        Int?
  addNote       String?      @db.NVarChar(100)
  created_at    DateTime?    @db.DateTime
  updated_at    DateTime?    @db.DateTime
  Transaction   Transaction? @relation(fields: [transactionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__ProductRe__trans__5CD6CB2B")
}

model Products {
  id                String              @id(map: "PK__Products__3213E83FBBF1499B") @db.UniqueIdentifier
  shopId            String?             @db.UniqueIdentifier
  productName       String?             @db.NVarChar(100)
  description       String?             @db.NVarChar(Max)
  price             Decimal?            @db.Decimal(18, 2)
  quantity          Int?
  status            String?             @db.NVarChar(20)
  rating            Int?
  created_at        DateTime?           @db.DateTime
  updated_at        DateTime?           @db.DateTime
  Cart              Cart[]
  ProductCategories ProductCategories[]
  ProductImgs       ProductImgs[]
  Shop              Shop?               @relation(fields: [shopId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Products__shopId__412EB0B6")
  ProductVariants   ProductVariants[]
}

model ProductVariants {
  id          String    @id(map: "PK__ProductV__3213E83F76828AE3") @db.UniqueIdentifier
  productId   String?   @db.UniqueIdentifier
  variantName String?   @db.NVarChar(50)
  imgUrl      String?
  created_at  DateTime? @db.DateTime
  updated_at  DateTime? @db.DateTime
  Products    Products? @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__ProductVa__produ__46E78A0C")
}

model Shipment {
  id          String       @id(map: "PK__Shipment__3213E83FC3F07487") @db.UniqueIdentifier
  orderId     String?      @db.UniqueIdentifier
  startDate   DateTime?    @db.DateTime
  expected    DateTime?    @db.DateTime
  endDate     DateTime?    @db.DateTime
  status      String?      @db.NVarChar(20)
  Transaction Transaction? @relation(fields: [orderId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Shipment__orderI__59FA5E80")
}

model ShipmentProvider {
  id           String        @id(map: "PK__Shipment__3213E83FC5432258") @db.UniqueIdentifier
  providerName String?       @db.NVarChar(50)
  description  String?       @db.NVarChar(200)
  price        Decimal?      @db.Decimal(18, 2)
  Transaction  Transaction[]
}

model Shop {
  id              String     @id(map: "PK__Shop__3213E83FECD91443") @db.UniqueIdentifier
  userId          String?    @db.UniqueIdentifier
  realName        String?    @db.NVarChar(80)
  shopName        String?    @db.NVarChar(100)
  description     String?    @db.NVarChar(500)
  phoneContact    String?    @db.NVarChar(20)
  emailContact    String?    @db.NVarChar(50)
  addressContact  String?    @db.NVarChar(200)
  rating          Int?
  certify         Boolean?
  productQuantity Int?
  status          String?    @db.NVarChar(20)
  created_at      DateTime?  @db.DateTime
  updated_at      DateTime?  @db.DateTime
  Products        Products[]
  Users           Users?     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Shop__userId__3C69FB99")
}

model ShopReview {
  id            String       @id(map: "PK__ShopRevi__3213E83FFCD8F2A1") @db.UniqueIdentifier
  transactionId String?      @db.UniqueIdentifier
  review        Int?
  addNote       String?
  created_at    DateTime?    @db.DateTime
  updated_at    DateTime?    @db.DateTime
  Transaction   Transaction? @relation(fields: [transactionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__ShopRevie__trans__5FB337D6")
}

model Transaction {
  id               String            @id(map: "PK__Transact__3213E83F6595FDFE") @db.UniqueIdentifier
  cartId           String?           @db.UniqueIdentifier
  paymentMethod    String?           @db.UniqueIdentifier
  shipProvider     String?           @db.UniqueIdentifier
  payPrice         Decimal?          @db.Decimal(18, 2)
  status           String?           @db.NVarChar(20)
  created_at       DateTime?         @db.DateTime
  updated_at       DateTime?         @db.DateTime
  ProductReview    ProductReview[]
  Shipment         Shipment[]
  ShopReview       ShopReview[]
  Cart             Cart?             @relation(fields: [cartId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Transacti__cartI__5535A963")
  PaymentMethod    PaymentMethod?    @relation(fields: [paymentMethod], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Transacti__payme__5629CD9C")
  ShipmentProvider ShipmentProvider? @relation(fields: [shipProvider], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Transacti__shipP__571DF1D5")
}

model Users {
  id          String    @id(map: "PK__Users__3213E83FF4FE2834") @db.UniqueIdentifier
  userName    String?   @db.NVarChar(50)
  email       String?   @db.NVarChar(50)
  password    String?   @db.NVarChar(30)
  role        String?   @db.NVarChar(10)
  realName    String?   @db.NVarChar(50)
  phoneNumber String?   @db.NVarChar(20)
  dob         DateTime? @db.DateTime
  sex         String?   @db.NVarChar(10)
  avatar      String?   @db.NVarChar(500)
  status      String?   @db.NVarChar(20)
  created_at  DateTime? @db.DateTime
  updated_at  DateTime? @db.DateTime
  Address     Address[]
  Cart        Cart[]
  Shop        Shop[]
}
